package com.dcmc.apps.taskmanager.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProjectMemberAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectMemberAllPropertiesEquals(ProjectMember expected, ProjectMember actual) {
        assertProjectMemberAutoGeneratedPropertiesEquals(expected, actual);
        assertProjectMemberAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectMemberAllUpdatablePropertiesEquals(ProjectMember expected, ProjectMember actual) {
        assertProjectMemberUpdatableFieldsEquals(expected, actual);
        assertProjectMemberUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectMemberAutoGeneratedPropertiesEquals(ProjectMember expected, ProjectMember actual) {
        assertThat(actual)
            .as("Verify ProjectMember auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectMemberUpdatableFieldsEquals(ProjectMember expected, ProjectMember actual) {
        assertThat(actual)
            .as("Verify ProjectMember relevant properties")
            .satisfies(a -> assertThat(a.getAssignedAt()).as("check assignedAt").isEqualTo(expected.getAssignedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectMemberUpdatableRelationshipsEquals(ProjectMember expected, ProjectMember actual) {
        assertThat(actual)
            .as("Verify ProjectMember relationships")
            .satisfies(a -> assertThat(a.getProject()).as("check project").isEqualTo(expected.getProject()));
    }
}
