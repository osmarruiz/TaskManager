package com.dcmc.apps.taskmanager.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WorkGroupMembershipAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkGroupMembershipAllPropertiesEquals(WorkGroupMembership expected, WorkGroupMembership actual) {
        assertWorkGroupMembershipAutoGeneratedPropertiesEquals(expected, actual);
        assertWorkGroupMembershipAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkGroupMembershipAllUpdatablePropertiesEquals(WorkGroupMembership expected, WorkGroupMembership actual) {
        assertWorkGroupMembershipUpdatableFieldsEquals(expected, actual);
        assertWorkGroupMembershipUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkGroupMembershipAutoGeneratedPropertiesEquals(WorkGroupMembership expected, WorkGroupMembership actual) {
        assertThat(actual)
            .as("Verify WorkGroupMembership auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkGroupMembershipUpdatableFieldsEquals(WorkGroupMembership expected, WorkGroupMembership actual) {
        assertThat(actual)
            .as("Verify WorkGroupMembership relevant properties")
            .satisfies(a -> assertThat(a.getRole()).as("check role").isEqualTo(expected.getRole()))
            .satisfies(a -> assertThat(a.getJoinDate()).as("check joinDate").isEqualTo(expected.getJoinDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkGroupMembershipUpdatableRelationshipsEquals(WorkGroupMembership expected, WorkGroupMembership actual) {
        assertThat(actual)
            .as("Verify WorkGroupMembership relationships")
            .satisfies(a -> assertThat(a.getWorkGroup()).as("check workGroup").isEqualTo(expected.getWorkGroup()));
    }
}
