package com.dcmc.apps.taskmanager.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TaskStatusCatalogAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskStatusCatalogAllPropertiesEquals(TaskStatusCatalog expected, TaskStatusCatalog actual) {
        assertTaskStatusCatalogAutoGeneratedPropertiesEquals(expected, actual);
        assertTaskStatusCatalogAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskStatusCatalogAllUpdatablePropertiesEquals(TaskStatusCatalog expected, TaskStatusCatalog actual) {
        assertTaskStatusCatalogUpdatableFieldsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskStatusCatalogAutoGeneratedPropertiesEquals(TaskStatusCatalog expected, TaskStatusCatalog actual) {
        assertThat(actual)
            .as("Verify TaskStatusCatalog auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskStatusCatalogUpdatableFieldsEquals(TaskStatusCatalog expected, TaskStatusCatalog actual) {
        assertThat(actual)
            .as("Verify TaskStatusCatalog relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }


}
